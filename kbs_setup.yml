---
- hosts: k8s_master
  become: true
  vars:
    k8s_version: "1.29.2"  # Replace with your desired Kubernetes version
  tasks:
    - name: Disable swap
      command: swapoff -a

    - name: Install required packages
      dnf:
        name: iproute-tc
        state: present

    - name: Load kernel modules
      modprobe:
        name: "{{ item }}"
      loop:
        - overlay
        - br_netfilter

    - name: Configure kernel modules
      copy:
        content: "{{ item.content }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode | default(0644) }}"
      loop:
        - content: "overlay\nbr_netfilter\n"
          dest: "/etc/modules-load.d/k8s.conf"

    - name: Configure sysctl
      copy:
        content: "{{ item.content }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode | default(0644) }}"
      loop:
        - content: |
            net.bridge.bridge-nf-call-iptables  = 1
            net.ipv4.ip_forward                 = 1
            net.bridge.bridge-nf-call-ip6tables = 1
          dest: "/etc/sysctl.d/k8s.conf"

    - name: Apply sysctl configurations
      command: sysctl --system

    - name: Set SELinux to permissive mode
      command: "{{ item }}"
      loop:
        - setenforce 0
        - sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

    - name: Add Kubernetes repo
      copy:
        content: "{{ item.content }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode | default(0644) }}"
      loop:
        - content: |
            [kubernetes]
            name=Kubernetes
            baseurl=https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION/rpm/
            enabled=1
            gpgcheck=1
            gpgkey=https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION/rpm/repodata/repomd.xml.key
          dest: "/etc/yum.repos.d/kubernetes.repo"

    - name: Add CRI-O repo
      copy:
        content: "{{ item.content }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode | default(0644) }}"
      loop:
        - content: |
            [cri-o]
            name=CRI-O
            baseurl=https://pkgs.k8s.io/addons:/cri-o:/$PROJECT_PATH/rpm/
            enabled=1
            gpgcheck=1
            gpgkey=https://pkgs.k8s.io/addons:/cri-o:/$PROJECT_PATH/rpm/repodata/repomd.xml.key
          dest: "/etc/yum.repos.d/cri-o.repo"

    - name: Install Kubernetes components on master
      dnf:
        name:
          - cri-o
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Enable and start CRI-O on master
      systemd:
        name: crio
        enabled: yes
        state: started

    - name: Enable and start kubelet on master
      systemd:
        name: kubelet
        enabled: yes
        state: started

    - name: Initialize Kubernetes master
      command: kubeadm init --pod-network-cidr=10.244.0.0/16
      args:
        creates: /etc/kubernetes/admin.conf
      register: kubeadm_output

    - name: Set up kubeconfig for regular users on master
      become_user: "{{ ansible_user }}"
      command: "{{ item }}"
      loop:
        - mkdir -p $HOME/.kube
        - cp /etc/kubernetes/admin.conf $HOME/.kube/config
        - chown $(id -u):$(id -g) $HOME/.kube/config

    - name: Apply Flannel network plugin on master
      become_user: "{{ ansible_user }}"
      command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

    - name: Show join command for worker nodes
      debug:
        var: kubeadm_output.stdout_lines
      when: "'kubeadm join' in kubeadm_output.stdout"

- hosts: k8s_nodes
  become: true
  vars:
    kubeadm_join_command: "{{ hostvars[groups['k8s_master'][0]]['kubeadm_output']['stdout_lines'][-1] }}"
  tasks:
    - name: Disable swap
      command: swapoff -a

    - name: Install required packages
      dnf:
        name: iproute-tc
        state: present

    - name: Load kernel modules
      modprobe:
        name: "{{ item }}"
      loop:
        - overlay
        - br_netfilter

    - name: Configure kernel modules
      copy:
        content: "{{ item.content }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode | default(0644) }}"
      loop:
        - content: "overlay\nbr_netfilter\n"
          dest: "/etc/modules-load.d/k8s.conf"

    - name: Configure sysctl
      copy:
        content: "{{ item.content }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode | default(0644) }}"
      loop:
        - content: |
            net.bridge.bridge-nf-call-iptables  = 1
            net.ipv4.ip_forward                 = 1
            net.bridge.bridge-nf-call-ip6tables = 1
          dest: "/etc/sysctl.d/k8s.conf"

    - name: Apply sysctl configurations
      command: sysctl --system

    - name: Set SELinux to permissive mode
      command: "{{ item }}"
      loop:
        - setenforce 0
        - sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

    - name: Add Kubernetes repo
      copy:
        content: "{{ item.content }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode | default(0644) }}"
      loop:
        - content: |
            [kubernetes]
            name=Kubernetes
            baseurl=https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION/rpm/
            enabled=1
            gpgcheck=1
            gpgkey=https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION/rpm/repodata/repomd.xml.key
          dest: "/etc/yum.repos.d/kubernetes.repo"

    - name: Add CRI-O repo
      copy:
        content: "{{ item.content }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode | default(0644) }}"
      loop:
        - content: |
            [cri-o]
            name=CRI
